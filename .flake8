[flake8]
exclude =
    .git,
    tests/**
max-line-length = 100
inline-quotes = double
docstring-convention=google
per-file-ignores = bliss/__init__.py:WPS412
ignore =
    # documentation not yet needed
    D100,D101,D102,D103,D104,D105,D106,D107,

    # only makes sense once we're using proper docstrings
    D205, D400, DAR201, DAR101,

    # darglint validates our doc strings
    RST201,RST301,D202

    # no documention tests
    DAR401

    # high Jones complexity isn't always so bad
    WPS221,

    # removing all magic numbers seems like overkill
    WPS432,

    # assertions are useful for development code
    S101,

    # requiring trailing commas seems too picky
    C812,

    # number of local variables is already checked by pylint
    WPS210,

    # a redundant subscript can be more readible that defining a temp value
    WPS349,

    # useless else has its moments
    WPS503,

    # no need to explicitly inherit from object
    WPS306,

    # for list comprehensions one-character variable names are useful
    WPS111,

    # some of these bad variable names are set by other packages
    WPS110,

    # already enforced by pylint
    WPS211,

    # not too many assert statements
    WPS218,

    # reusing string constants is less verbose that defining a variable
    WPS226,

    # positional arguments to formatting strings are redundant
    P101,

    # I am not worried about security issues associate with pickle
    S301, S403,

    # black disagrees, actually inserting space before some colons
    E203,

    # f-strings are OK, though perhaps using .format is better
    WPS305,

    # some of these "overused" expressions are quite short
    WPS204,

    # it's sometimes useful to import from and import the module directly
    WPS458

    # false positive; this cannot be done with "yield from"
    WPS526,

    # not helpful
    WPS201,

    # not that complex really
    WPS237,

    # negated condition can be more clear
    WPS504,

    # implicit string concatenation seems pretty clear
    WPS326,

    # the keyword "del" is useful to us
    WPS420,

    # sometime we need to import several modules even for well-defined modules we implement
    WPS202,

    # hard to avoid having too many methods with pytorch lightning
    WPS214,

    # too many decorators
    WPS216,

    # I like underscore numbers
    WPS303,

    # print is useful
    WPS421
